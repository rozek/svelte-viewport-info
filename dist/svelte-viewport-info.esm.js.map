{"version":3,"file":"svelte-viewport-info.esm.js","sources":["../src/svelte-viewport-info.ts"],"sourcesContent":["//----------------------------------------------------------------------------//\n//                            Svelte Viewport Info                            //\n//----------------------------------------------------------------------------//\n\n  let MediaMatcher = (\n    window.matchMedia ||\n// @ts-ignore\n    window['webkitMatchmedia'] || window['mozMatchmedia'] || window['oMatchmedia']\n  )\n\n  function MediaQuery (query:string):boolean {\n    return (MediaMatcher != null) && MediaMatcher(query).matches\n  }\n\n  function DocumentIsReady ():boolean {\n    return (\n      (document.readyState === 'interactive') ||\n      (document.readyState === 'complete')\n    )\n  }\n\n  /**** determineViewportSize ****/\n  // Internet Explorer and MS/Edge are NOT supported\n\n    let ViewportWidth:number  = 0     // given in px, explicit initialization...\n    let ViewportHeight:number = 0        // ...is needed to satisfy the compiler\n\n    function determineViewportSize ():void {\n      ViewportWidth = Math.max(\n        document.documentElement.clientWidth  || 0, window.innerWidth  || 0\n      )\n      ViewportHeight = Math.max(\n        document.documentElement.clientHeight || 0, window.innerHeight || 0\n      )\n    }\n    // see https://stackoverflow.com/questions/1248081/get-the-browser-viewport-dimensions-with-javascript\n\n    determineViewportSize()\n  /**** determineScreenOrientation ****/\n\n    type Orientation          = 'portrait'|'landscape'\n    type detailledOrientation = 'portrait-primary'|'portrait-secondary'|'landscape-primary'|'landscape-secondary'\n\n    let ScreenOrientation:Orientation|undefined                   = undefined\n    let detailledScreenOrientation:detailledOrientation|undefined = undefined\n                        // explicit initialization is needed to satisfy compiler\n\n    function determineScreenOrientation ():void {\n      let Orientation\n        if ('orientation' in window.Screen) {\n          Orientation = window.screen.orientation.type\n        }\n      switch (Orientation) {\n        case 'portrait-primary':\n        case 'portrait-secondary':\n          ScreenOrientation          = 'portrait'\n          detailledScreenOrientation = Orientation\n          break\n        case 'landscape-primary':\n        case 'landscape-secondary':\n          ScreenOrientation          = 'landscape'\n          detailledScreenOrientation = Orientation\n          break\n        default:\n          switch (true) {\n            case MediaQuery('(orientation:portrait)'):  ScreenOrientation = 'portrait';  break\n            case MediaQuery('(orientation:landscape)'):\n            case ViewportWidth > ViewportHeight:        ScreenOrientation = 'landscape'; break\n            default:                                    ScreenOrientation = 'portrait'\n          }\n          detailledScreenOrientation = undefined\n      }\n\n      if (DocumentIsReady()) {\n        document.body.classList.remove(\n          'Portrait','Landscape','Portrait-primary','Portrait-secondary',\n          'Landscape-primary','Landscape-secondary'\n        )\n\n        switch (ScreenOrientation) {\n          case 'portrait':  document.body.classList.add('Portrait');  break\n          case 'landscape': document.body.classList.add('Landscape'); break\n        }\n        if (detailledScreenOrientation != null) {\n          const capitalized = (Name:string) => Name[0].toUpperCase() + Name.slice(1)\n          document.body.classList.add(capitalized(detailledScreenOrientation))\n        }\n      }\n    }\n\n    determineScreenOrientation()\n\n    if (! DocumentIsReady()) {\n      window.addEventListener('DOMContentLoaded', determineScreenOrientation)\n    }           // after document is loaded, classes will be applied as foreseen\n\n  /**** handle problem that \"orientationchange\" is fired too soon ****/\n\n    let oldViewportWidth  = ViewportWidth\n    let oldViewportHeight = ViewportHeight\n\n    let oldScreenOrientation:Orientation|undefined                   = ScreenOrientation\n    let oldDetailledScreenOrientation:detailledOrientation|undefined = detailledScreenOrientation\n\n    function rememberSettings ():void {\n      oldViewportWidth  = ViewportWidth\n      oldViewportHeight = ViewportHeight\n\n      oldScreenOrientation          = ScreenOrientation\n      oldDetailledScreenOrientation = detailledScreenOrientation\n    }\n\n    function submitEvents ():void {\n      if (! DocumentIsReady()) { return }\n\n      if ((oldViewportWidth !== ViewportWidth) || (oldViewportHeight !== ViewportHeight)) {\n        document.body.dispatchEvent(\n          new Event('viewportchanged', { bubbles:true, cancelable:true })\n        )\n      }\n\n      if (\n        (oldScreenOrientation          !== ScreenOrientation) ||\n        (oldDetailledScreenOrientation !== detailledScreenOrientation)\n      ) {\n        document.body.dispatchEvent(\n          new Event('orientationchangeend', { bubbles:true, cancelable:true })\n        )\n      }\n    }\n\n    let   Poller:any   // right now, it's difficult to determine the proper type\n    let   PollCounter      = 0\n    const PollCounterLimit = 10               // i.e., stop polling after 1000ms\n\n    function stopPolling ():void {\n      clearInterval(Poller)\n\n      Poller      = undefined\n      PollCounter = 0\n    }\n\n    function pollForViewportAfterOrientationChange ():void {\n      Poller = setInterval(function () {\n        determineViewportSize()\n        if (                // no update of screen size yet? => continue polling\n          (oldViewportWidth  === ViewportWidth) &&\n          (oldViewportHeight === ViewportHeight)\n        ) {\n          PollCounter += 1\n          if (PollCounter <= PollCounterLimit) { return }\n        }     // nota bene: sometimes viewport does not change (e.g., in iframe)\n\n        stopPolling()\n\n        determineScreenOrientation()    // uses ViewportWidth/Height as fallback\n        submitEvents()\n        rememberSettings()\n      }, 100)\n    }\n\n  /**** handler for \"orientationchange\" event ****/\n\n    function determineViewportSizeAndScreenOrientation ():void {\n      determineViewportSize()\n      determineScreenOrientation() // uses screen_width/height as final fallback\n\n      if (Poller != null) {      // we are still polling because of former event\n        stopPolling()\n        submitEvents()\n        rememberSettings()\n      }\n\n      if (\n        (oldViewportWidth  === ViewportWidth) &&\n        (oldViewportHeight === ViewportHeight)\n      ) {        // screen size did not (yet) change => start polling for change\n        pollForViewportAfterOrientationChange()\n      } else {                   // viewport size changed in time => do not poll\n        submitEvents()\n        rememberSettings()\n      }\n    }\n  // see https://github.com/gajus/orientationchangeend\n\n  /**** update on changes ****/\n\n    window.addEventListener('orientationchange', function () {\n      setTimeout(determineViewportSizeAndScreenOrientation,10)\n    })// seen on iOS 12: \"orientationchange\" fired before orientation is updated\n\n    window.addEventListener('resize', determineViewportSizeAndScreenOrientation)\n\n    if ('orientation' in screen) {\n      screen.orientation.addEventListener('change', function () {\n        setTimeout(determineViewportSizeAndScreenOrientation,10)\n      })\n    }\n\n\n  export default {\n    get Width ()  { return ViewportWidth },\n    get Height () { return ViewportHeight },\n\n    get Orientation ()          { return ScreenOrientation },\n    get detailledOrientation () { return detailledScreenOrientation },\n  }\n\n"],"names":[],"mappings":"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"}